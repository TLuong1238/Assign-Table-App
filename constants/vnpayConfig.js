import * as Linking from 'expo-linking';

export const VNPAY_CONFIG = {
  // ‚úÖ Sandbox URLs (Test environment)
  PAYMENT_URL: 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html',
  
  // ‚úÖ FIX RETURN URL - FORCE HTTPBIN
  get RETURN_URL() {
    if (__DEV__) {
      // ‚úÖ LU√îN D√ôNG HTTPBIN TRONG DEV
      return 'https://httpbin.org/get';
    } else {
      return 'bunchaobama://vnpay-return';
    }
  },
  
  // ‚úÖ Merchant Info
  TMN_CODE: 'SHBIE26J',              
  HASH_SECRET: 'U6GK10I9PBNC4UU5HU9GMZZM4V6V78ZW',   
  
  // ‚úÖ VNPay API Version & Commands
  VERSION: '2.1.0',
  COMMAND: 'pay',
  CURR_CODE: 'VND',
  LOCALE: 'vn',
  
  // ‚úÖ Order Types
  ORDER_TYPE: {
    DEPOSIT: 'other',    
    FULL: 'other',            
    FOOD: 'other'              
  },
  
  // ‚úÖ Response Codes
  RESPONSE_CODES: {
    SUCCESS: '00',
    PENDING: '01',
    FAILED: '02',
    INVALID: '04',
    PROCESSING: '05',
    CANCELLED: '06',
    SUSPICIOUS: '07'
  },
  
  // ‚úÖ Transaction Status
  TRANSACTION_STATUS: {
    SUCCESS: '00',
    FAILED: '01',
    PROCESSING: '02'
  }
};

// ‚úÖ PARSE HTTPBIN RESPONSE - SKIP VALIDATION
export const parseHttpBinResponse = (httpBinData) => {
  try {
    console.log('üîÑ Parsing HTTPBin response:', httpBinData);
    
    const vnpayParams = httpBinData.args || {};
    
    if (!vnpayParams.vnp_ResponseCode) {
      throw new Error('No VNPay response code in HTTPBin data');
    }
    
    // ‚úÖ SKIP VALIDATION - CH·ªà PARSE DATA
    const isSuccess = vnpayParams.vnp_ResponseCode === '00' && 
                     vnpayParams.vnp_TransactionStatus === '00';

    const result = {
      isSuccess,
      amount: parseInt(vnpayParams.vnp_Amount || 0) / 100,
      transactionNo: vnpayParams.vnp_TransactionNo,
      bankCode: vnpayParams.vnp_BankCode,
      orderInfo: decodeURIComponent(vnpayParams.vnp_OrderInfo || ''),
      payDate: vnpayParams.vnp_PayDate,
      responseCode: vnpayParams.vnp_ResponseCode,
      transactionStatus: vnpayParams.vnp_TransactionStatus,
      txnRef: vnpayParams.vnp_TxnRef,
      bankTranNo: vnpayParams.vnp_BankTranNo,
      cardType: vnpayParams.vnp_CardType,
      message: VNPAY_MESSAGES[vnpayParams.vnp_ResponseCode] || 'Kh√¥ng x√°c ƒë·ªãnh',
      rawData: vnpayParams
    };
    
    return {
      success: true,
      data: result
    };
    
  } catch (error) {
    console.error('‚ùå Parse HTTPBin response error:', error);
    return {
      success: false,
      message: error.message
    };
  }
};

export const VNPAY_MESSAGES = {
  '00': 'Giao d·ªãch th√†nh c√¥ng',
  '07': 'Tr·ª´ ti·ªÅn th√†nh c√¥ng. Giao d·ªãch b·ªã nghi ng·ªù (li√™n quan t·ªõi l·ª´a ƒë·∫£o, giao d·ªãch b·∫•t th∆∞·ªùng)',
  '09': 'Giao d·ªãch kh√¥ng th√†nh c√¥ng do: Th·∫ª/T√†i kho·∫£n c·ªßa kh√°ch h√†ng ch∆∞a ƒëƒÉng k√Ω d·ªãch v·ª• InternetBanking t·∫°i ng√¢n h√†ng',
  '10': 'Giao d·ªãch kh√¥ng th√†nh c√¥ng do: Kh√°ch h√†ng x√°c th·ª±c th√¥ng tin th·∫ª/t√†i kho·∫£n kh√¥ng ƒë√∫ng qu√° 3 l·∫ßn',
  '11': 'Giao d·ªãch kh√¥ng th√†nh c√¥ng do: ƒê√£ h·∫øt h·∫°n ch·ªù thanh to√°n. Xin qu√Ω kh√°ch vui l√≤ng th·ª±c hi·ªán l·∫°i giao d·ªãch',
  '12': 'Giao d·ªãch kh√¥ng th√†nh c√¥ng do: Th·∫ª/T√†i kho·∫£n c·ªßa kh√°ch h√†ng b·ªã kh√≥a',
  '13': 'Giao d·ªãch kh√¥ng th√†nh c√¥ng do Qu√Ω kh√°ch nh·∫≠p sai m·∫≠t kh·∫©u x√°c th·ª±c giao d·ªãch (OTP)',
  '24': 'Giao d·ªãch kh√¥ng th√†nh c√¥ng do: Kh√°ch h√†ng h·ªßy giao d·ªãch',
  '51': 'Giao d·ªãch kh√¥ng th√†nh c√¥ng do: T√†i kho·∫£n c·ªßa qu√Ω kh√°ch kh√¥ng ƒë·ªß s·ªë d∆∞ ƒë·ªÉ th·ª±c hi·ªán giao d·ªãch',
  '65': 'Giao d·ªãch kh√¥ng th√†nh c√¥ng do: T√†i kho·∫£n c·ªßa Qu√Ω kh√°ch ƒë√£ v∆∞·ª£t qu√° h·∫°n m·ª©c giao d·ªãch trong ng√†y',
  '75': 'Ng√¢n h√†ng thanh to√°n ƒëang b·∫£o tr√¨',
  '79': 'Giao d·ªãch kh√¥ng th√†nh c√¥ng do: KH nh·∫≠p sai m·∫≠t kh·∫©u thanh to√°n qu√° s·ªë l·∫ßn quy ƒë·ªãnh',
  '99': 'C√°c l·ªói kh√°c (l·ªói c√≤n l·∫°i, kh√¥ng c√≥ trong danh s√°ch m√£ l·ªói ƒë√£ li·ªát k√™)'
};